{"version":3,"sources":["Shark.js"],"names":["cc","Class","extends","Component","properties","shark","sp","Skeleton","engryBar","ProgressBar","onLoad","node","getComponent","anim","setAnimation","timeScale","action","isDeath","start","attack","tween","to","progress","sequence","callFunc","x","call","setCompleteListener","entry","animation","name","runAction","getHit","duration","flash","schedule","isDone","unscheduleAllCallbacks","color","Color","RED","delayTime","WHITE","repeat","die","spawn","engryControl","engry","checkAction","update","dt"],"mappings":"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","file":"Shark.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        shark: sp.Skeleton,\n        engryBar: cc.ProgressBar,\n\n    },\n    onLoad() {\n        this.shark = this.node.getComponent(sp.Skeleton);\n        let anim = this.shark.setAnimation(0, 'Attack_3', true);\n        anim.timeScale = 0.3,\n            this.action = false;\n        this.isDeath = null;\n    },\n    start() {\n    },\n    attack() {\n        cc.tween(this.engryBar)\n            .to(1, { progress: 0 })\n            .start()\n        this.shark.setAnimation(0, 'Walk', true);\n        let action = cc.sequence(\n            cc.callFunc(() => {\n                cc.tween(this.node)\n                    .to(0.5, { x: 300 })\n                    .call(() => {\n                        this.shark.setAnimation(0, 'Attack_1', false);\n                    })\n                    .start();\n            })\n            ,\n            cc.callFunc(() => {\n                this.shark.setCompleteListener((entry) => {\n                    if (entry.animation.name == \"Attack_1\") {\n                        this.shark.setAnimation(0, 'Walk', true);\n                        cc.tween(this.node)\n                            .to(0.5, { x: 840 })\n                            .call(() => {\n                                let anim = this.shark.setAnimation(0, 'Attack_3', true);\n                                anim.timeScale = 0.3\n                                this.action = true;\n                            }\n                            )\n                            .start();\n                    }\n                })\n            },\n            )\n        )\n        this.node.runAction(action);\n    },\n    getHit(duration) {\n        let action = cc.callFunc(() => this.flash(duration))\n        this.node.runAction(action);\n        this.schedule(function () {\n            if (action.isDone()) {\n                this.action = true\n                this.unscheduleAllCallbacks();\n            }\n        }, 0.16);\n    },\n    flash(duration) {\n        let action = cc.sequence(\n            cc.callFunc(() => {\n                this.node.color = cc.Color.RED;\n            }),\n            cc.delayTime(duration / 6),\n            cc.callFunc(() => {\n                this.node.color = cc.Color.WHITE;\n            }),\n            cc.delayTime(duration / 6),\n        ).repeat(3)\n        this.node.runAction(action)\n    },\n    die(duration) {\n        let action = cc.spawn(\n            cc.callFunc(() => this.flash(duration)),\n            cc.callFunc(() => {\n                this.shark.setAnimation(0, 'Dead', false);\n                this.isDeath = false;\n            }))\n        this.node.runAction(action);\n    },\n    engryControl(duration, engry) {\n        let action = cc.callFunc(() => {\n            cc.tween(this.engryBar)\n                .to(duration, { progress: engry })\n                .start()\n        })\n        this.node.runAction(action)\n    },\n    checkAction() {\n        if (this.action) {\n            this.action = false;\n            return true\n        }\n        return false\n    },\n\n    update(dt) {\n        if (this.isDeath == false) {\n            this.shark.setCompleteListener((entry) => {\n                if (entry.animation.name == \"Dead\") {\n                    this.isDeath = true;\n                }\n            })\n\n        }\n    }\n});\n"]}